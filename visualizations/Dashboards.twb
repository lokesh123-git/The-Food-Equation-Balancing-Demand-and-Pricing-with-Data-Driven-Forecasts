<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='classic' />
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='select plot' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Forecast plot&quot;'>
        <calculation class='tableau' formula='&quot;Forecast plot&quot;' />
        <members>
          <member value='&quot;Line graph&quot;' />
          <member value='&quot;Bar plot&quot;' />
          <member value='&quot;Seasonality plot&quot;' />
          <member value='&quot;Forecast plot&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Updated_City_Data' inline='true' name='federated.127pw901ya8ns71gwszdl1vlo92n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Updated_City_Data' name='textscan.1mtao8m1sltkzc1aeosnb0jc9iaq'>
            <connection class='textscan' directory='C:/Users/lokes/Downloads' filename='Dashboards.twb' password='' server='' />
          </named-connection>
          <named-connection caption='Seasonal_City_df' name='textscan.0qbm3sm1f6umr719odxvv0wv54hk'>
            <connection class='textscan' directory='C:/Users/Dell/Downloads' filename='Seasonal_City_df.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1mtao8m1sltkzc1aeosnb0jc9iaq' name='Updated_City_Data.csv' table='[Updated_City_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='labor force' ordinal='1' />
            <column datatype='integer' name='employment' ordinal='2' />
            <column datatype='integer' name='unemployment' ordinal='3' />
            <column datatype='real' name='unemployment rate' ordinal='4' />
            <column datatype='string' name='Metroregion_name' ordinal='5' />
            <column datatype='integer' name='Month' ordinal='6' />
            <column datatype='string' name='EFPG_name' ordinal='7' />
            <column datatype='integer' name='EFPG_code' ordinal='8' />
            <column datatype='integer' name='Metroregion_code' ordinal='9' />
            <column datatype='integer' name='Purchase_dollars_wtd' ordinal='10' />
            <column datatype='integer' name='Purchase_grams_wtd' ordinal='11' />
            <column datatype='integer' name='Purchase_dollars_unwtd' ordinal='12' />
            <column datatype='integer' name='Purchase_grams_unwtd' ordinal='13' />
            <column datatype='integer' name='Number_stores' ordinal='14' />
            <column datatype='real' name='Unit_value_mean_wtd' ordinal='15' />
            <column datatype='real' name='Unit_value_se_wtd' ordinal='16' />
            <column datatype='real' name='Unit_value_mean_unwtd' ordinal='17' />
            <column datatype='real' name='Price_index_GEKS' ordinal='18' />
            <column datatype='date' name='Date' ordinal='19' />
            <column datatype='real' name='Latitude' ordinal='20' />
            <column datatype='real' name='Longitude' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1mtao8m1sltkzc1aeosnb0jc9iaq' name='Updated_City_Data.csv' table='[Updated_City_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='labor force' ordinal='1' />
            <column datatype='integer' name='employment' ordinal='2' />
            <column datatype='integer' name='unemployment' ordinal='3' />
            <column datatype='real' name='unemployment rate' ordinal='4' />
            <column datatype='string' name='Metroregion_name' ordinal='5' />
            <column datatype='integer' name='Month' ordinal='6' />
            <column datatype='string' name='EFPG_name' ordinal='7' />
            <column datatype='integer' name='EFPG_code' ordinal='8' />
            <column datatype='integer' name='Metroregion_code' ordinal='9' />
            <column datatype='integer' name='Purchase_dollars_wtd' ordinal='10' />
            <column datatype='integer' name='Purchase_grams_wtd' ordinal='11' />
            <column datatype='integer' name='Purchase_dollars_unwtd' ordinal='12' />
            <column datatype='integer' name='Purchase_grams_unwtd' ordinal='13' />
            <column datatype='integer' name='Number_stores' ordinal='14' />
            <column datatype='real' name='Unit_value_mean_wtd' ordinal='15' />
            <column datatype='real' name='Unit_value_se_wtd' ordinal='16' />
            <column datatype='real' name='Unit_value_mean_unwtd' ordinal='17' />
            <column datatype='real' name='Price_index_GEKS' ordinal='18' />
            <column datatype='date' name='Date' ordinal='19' />
            <column datatype='real' name='Latitude' ordinal='20' />
            <column datatype='real' name='Longitude' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>labor force</remote-name>
            <remote-type>20</remote-type>
            <local-name>[labor force]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>labor force</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>employment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[employment]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>employment</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unemployment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[unemployment]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>unemployment</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unemployment rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unemployment rate]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>unemployment rate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metroregion_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Metroregion_name]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>Metroregion_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EFPG_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[EFPG_name]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>EFPG_name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EFPG_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EFPG_code]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>EFPG_code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metroregion_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Metroregion_code]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>Metroregion_code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purchase_dollars_wtd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Purchase_dollars_wtd]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>Purchase_dollars_wtd</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purchase_grams_wtd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Purchase_grams_wtd]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>Purchase_grams_wtd</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purchase_dollars_unwtd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Purchase_dollars_unwtd]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>Purchase_dollars_unwtd</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purchase_grams_unwtd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Purchase_grams_unwtd]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>Purchase_grams_unwtd</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_stores</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number_stores]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>Number_stores</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit_value_mean_wtd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit_value_mean_wtd]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>Unit_value_mean_wtd</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit_value_se_wtd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit_value_se_wtd]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>Unit_value_se_wtd</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit_value_mean_unwtd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit_value_mean_unwtd]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>Unit_value_mean_unwtd</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price_index_GEKS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price_index_GEKS]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>Price_index_GEKS</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>19</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Updated_City_Data.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Display Plot' datatype='string' name='[Calculation_1315332587098529792]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Line graph&quot; THEN &quot;Line graph&quot;&#13;&#10;    WHEN &quot;Bar plot&quot; THEN &quot;Bar plot&quot;&#13;&#10;    WHEN &quot;Seasonality plot&quot; THEN &quot;Seasonality plot&quot;&#13;&#10;    WHEN &quot;Forecast plot&quot; THEN &quot;Forecast plot&quot;&#13;&#10;END' />
      </column>
      <column caption='EFPG code' datatype='integer' name='[EFPG_code]' role='dimension' type='ordinal' />
      <column caption='EFPG name' datatype='string' name='[EFPG_name]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Metroregion code' datatype='integer' name='[Metroregion_code]' role='dimension' type='ordinal' />
      <column caption='Metroregion name' datatype='string' name='[Metroregion_name]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column caption='Number stores' datatype='integer' name='[Number_stores]' role='measure' type='quantitative' />
      <column caption='Price index GEKS' datatype='real' name='[Price_index_GEKS]' role='measure' type='quantitative' />
      <column caption='Purchase dollars unwtd' datatype='integer' name='[Purchase_dollars_unwtd]' role='measure' type='quantitative' />
      <column caption='Purchase dollars wtd' datatype='integer' name='[Purchase_dollars_wtd]' role='measure' type='quantitative' />
      <column caption='Purchase grams unwtd' datatype='integer' name='[Purchase_grams_unwtd]' role='measure' type='quantitative' />
      <column caption='Purchase grams wtd' datatype='integer' name='[Purchase_grams_wtd]' role='measure' type='quantitative' />
      <column caption='Unit value mean unwtd' datatype='real' name='[Unit_value_mean_unwtd]' role='measure' type='quantitative' />
      <column caption='Unit value mean wtd' datatype='real' name='[Unit_value_mean_wtd]' role='measure' type='quantitative' />
      <column caption='Unit value se wtd' datatype='real' name='[Unit_value_se_wtd]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Updated_City_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D]' role='measure' type='quantitative' />
      <column caption='Employment' datatype='integer' name='[employment]' role='measure' type='quantitative' />
      <column caption='Labor Force' datatype='integer' name='[labor force]' role='measure' type='quantitative' />
      <column caption='Unemployment Rate' datatype='real' name='[unemployment rate]' role='measure' type='quantitative' />
      <column caption='Unemployment' datatype='integer' name='[unemployment]' role='measure' type='quantitative' />
      <column-instance column='[EFPG_name]' derivation='None' name='[none:EFPG_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <group caption='Action (Metroregion name)' hidden='true' name='[Action (Metroregion name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Metroregion_name]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:EFPG_name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Alcohol&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cheese and cream cheese&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Beef, pork, lamb, veal and game, fresh&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Shelf-stable, ready-to-heat foods and soups&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frozen and refrigerated ready-to-heat foods&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Whole milk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bacon, sausage, and lunch meats&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Egg and egg substitutes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;All other caloric beverages&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Low-calorie beverages&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='select plot' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Forecast plot&quot;'>
          <calculation class='tableau' formula='&quot;Forecast plot&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Updated_City_Data.csv' id='Updated_City_Data.csv_A6484C23AE96470DAC6BBEBC07678E8D'>
            <properties context=''>
              <relation connection='textscan.1mtao8m1sltkzc1aeosnb0jc9iaq' name='Updated_City_Data.csv' table='[Updated_City_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='integer' name='labor force' ordinal='1' />
                  <column datatype='integer' name='employment' ordinal='2' />
                  <column datatype='integer' name='unemployment' ordinal='3' />
                  <column datatype='real' name='unemployment rate' ordinal='4' />
                  <column datatype='string' name='Metroregion_name' ordinal='5' />
                  <column datatype='integer' name='Month' ordinal='6' />
                  <column datatype='string' name='EFPG_name' ordinal='7' />
                  <column datatype='integer' name='EFPG_code' ordinal='8' />
                  <column datatype='integer' name='Metroregion_code' ordinal='9' />
                  <column datatype='integer' name='Purchase_dollars_wtd' ordinal='10' />
                  <column datatype='integer' name='Purchase_grams_wtd' ordinal='11' />
                  <column datatype='integer' name='Purchase_dollars_unwtd' ordinal='12' />
                  <column datatype='integer' name='Purchase_grams_unwtd' ordinal='13' />
                  <column datatype='integer' name='Number_stores' ordinal='14' />
                  <column datatype='real' name='Unit_value_mean_wtd' ordinal='15' />
                  <column datatype='real' name='Unit_value_se_wtd' ordinal='16' />
                  <column datatype='real' name='Unit_value_mean_unwtd' ordinal='17' />
                  <column datatype='real' name='Price_index_GEKS' ordinal='18' />
                  <column datatype='date' name='Date' ordinal='19' />
                  <column datatype='real' name='Latitude' ordinal='20' />
                  <column datatype='real' name='Longitude' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='ActualAndForecast_Data' inline='true' name='federated.17uk7y01yvrz2e120nony1dtbabz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ActualAndForecast_Data' name='textscan.1525tmv0e13r4814d82ac0tjf622'>
            <connection class='textscan' directory='C:/Users/Dell/Downloads' filename='ActualAndForecast_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1525tmv0e13r4814d82ac0tjf622' name='ActualAndForecast_Data.csv' table='[ActualAndForecast_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='EFPG_name' ordinal='0' />
            <column datatype='string' name='Metroregion_name' ordinal='1' />
            <column datatype='real' name='Purchase_grams_wtd' ordinal='2' />
            <column datatype='date' name='Date' ordinal='3' />
            <column datatype='real' name='Latitude' ordinal='4' />
            <column datatype='real' name='Longitude' ordinal='5' />
            <column datatype='string' name='Type' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1525tmv0e13r4814d82ac0tjf622' name='ActualAndForecast_Data.csv' table='[ActualAndForecast_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='EFPG_name' ordinal='0' />
            <column datatype='string' name='Metroregion_name' ordinal='1' />
            <column datatype='real' name='Purchase_grams_wtd' ordinal='2' />
            <column datatype='date' name='Date' ordinal='3' />
            <column datatype='real' name='Latitude' ordinal='4' />
            <column datatype='real' name='Longitude' ordinal='5' />
            <column datatype='string' name='Type' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ActualAndForecast_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EFPG_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[EFPG_name]</local-name>
            <parent-name>[ActualAndForecast_Data.csv]</parent-name>
            <remote-alias>EFPG_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ActualAndForecast_Data.csv_D353AE2C72DE40F4B0F8FBCA05E03127]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metroregion_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Metroregion_name]</local-name>
            <parent-name>[ActualAndForecast_Data.csv]</parent-name>
            <remote-alias>Metroregion_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ActualAndForecast_Data.csv_D353AE2C72DE40F4B0F8FBCA05E03127]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purchase_grams_wtd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Purchase_grams_wtd]</local-name>
            <parent-name>[ActualAndForecast_Data.csv]</parent-name>
            <remote-alias>Purchase_grams_wtd</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ActualAndForecast_Data.csv_D353AE2C72DE40F4B0F8FBCA05E03127]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[ActualAndForecast_Data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ActualAndForecast_Data.csv_D353AE2C72DE40F4B0F8FBCA05E03127]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[ActualAndForecast_Data.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ActualAndForecast_Data.csv_D353AE2C72DE40F4B0F8FBCA05E03127]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[ActualAndForecast_Data.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ActualAndForecast_Data.csv_D353AE2C72DE40F4B0F8FBCA05E03127]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[ActualAndForecast_Data.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ActualAndForecast_Data.csv_D353AE2C72DE40F4B0F8FBCA05E03127]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Display Plot' datatype='string' name='[Calculation_1315332587098529792]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Line graph&quot; THEN &quot;Line graph&quot;&#13;&#10;    WHEN &quot;Bar plot&quot; THEN &quot;Bar plot&quot;&#13;&#10;    WHEN &quot;Seasonality plot&quot; THEN &quot;Seasonality plot&quot;&#13;&#10;    WHEN &quot;Forecast plot&quot; THEN &quot;Forecast plot&quot;&#13;&#10;END' />
      </column>
      <column caption='Show EFPG Filter' datatype='boolean' name='[Calculation_510032678854729728]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Forecast plot&quot;' />
      </column>
      <column caption='EFPG name' datatype='string' name='[EFPG_name]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Metroregion name' datatype='string' name='[Metroregion_name]' role='dimension' type='nominal' />
      <column caption='Purchase grams wtd' datatype='real' name='[Purchase_grams_wtd]' role='measure' type='quantitative' />
      <column datatype='string' name='[Type (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Type]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Actual&quot;'>
            <value>&quot;Actual&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Type]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='ActualAndForecast_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[ActualAndForecast_Data.csv_D353AE2C72DE40F4B0F8FBCA05E03127]' role='measure' type='quantitative' />
      <column-instance column='[EFPG_name]' derivation='None' name='[none:EFPG_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
      <group caption='Action (Metroregion name)' hidden='true' name='[Action (Metroregion name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Metroregion_name]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:EFPG_name:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Whole milk&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Alcohol&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bacon, sausage, and lunch meats&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Low-calorie beverages&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Egg and egg substitutes&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cheese and cream cheese&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Shelf-stable, ready-to-heat foods and soups&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Beef, pork, lamb, veal and game, fresh&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Frozen and refrigerated ready-to-heat foods&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;All other caloric beverages&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Type:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Forecast&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='select plot' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Forecast plot&quot;'>
          <calculation class='tableau' formula='&quot;Forecast plot&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='ActualAndForecast_Data.csv' id='ActualAndForecast_Data.csv_D353AE2C72DE40F4B0F8FBCA05E03127'>
            <properties context=''>
              <relation connection='textscan.1525tmv0e13r4814d82ac0tjf622' name='ActualAndForecast_Data.csv' table='[ActualAndForecast_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='EFPG_name' ordinal='0' />
                  <column datatype='string' name='Metroregion_name' ordinal='1' />
                  <column datatype='real' name='Purchase_grams_wtd' ordinal='2' />
                  <column datatype='date' name='Date' ordinal='3' />
                  <column datatype='real' name='Latitude' ordinal='4' />
                  <column datatype='real' name='Longitude' ordinal='5' />
                  <column datatype='string' name='Type' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Seasonal_City_df' inline='true' name='federated.0egldyr1vpymzj1fzg5fd09p5kxs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Seasonal_City_df' name='textscan.1bg0bg10jz2xx5192dvaj0v8fw61'>
            <connection class='textscan' directory='C:/Users/Dell/Downloads' filename='Seasonal_City_df.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1bg0bg10jz2xx5192dvaj0v8fw61' name='Seasonal_City_df.csv' table='[Seasonal_City_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='EFPG_name' ordinal='0' />
            <column datatype='string' name='Metroregion_name' ordinal='1' />
            <column datatype='string' name='Season' ordinal='2' />
            <column datatype='real' name='Latitude' ordinal='3' />
            <column datatype='real' name='Longitude' ordinal='4' />
            <column datatype='real' name='Purchase_grams_wtd' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1bg0bg10jz2xx5192dvaj0v8fw61' name='Seasonal_City_df.csv' table='[Seasonal_City_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='EFPG_name' ordinal='0' />
            <column datatype='string' name='Metroregion_name' ordinal='1' />
            <column datatype='string' name='Season' ordinal='2' />
            <column datatype='real' name='Latitude' ordinal='3' />
            <column datatype='real' name='Longitude' ordinal='4' />
            <column datatype='real' name='Purchase_grams_wtd' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Seasonal_City_df.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EFPG_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[EFPG_name]</local-name>
            <parent-name>[Seasonal_City_df.csv]</parent-name>
            <remote-alias>EFPG_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seasonal_City_df.csv_311798B42A06430483784C70A44FEDC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metroregion_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Metroregion_name]</local-name>
            <parent-name>[Seasonal_City_df.csv]</parent-name>
            <remote-alias>Metroregion_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seasonal_City_df.csv_311798B42A06430483784C70A44FEDC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[Seasonal_City_df.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seasonal_City_df.csv_311798B42A06430483784C70A44FEDC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Seasonal_City_df.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seasonal_City_df.csv_311798B42A06430483784C70A44FEDC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Seasonal_City_df.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seasonal_City_df.csv_311798B42A06430483784C70A44FEDC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purchase_grams_wtd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Purchase_grams_wtd]</local-name>
            <parent-name>[Seasonal_City_df.csv]</parent-name>
            <remote-alias>Purchase_grams_wtd</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seasonal_City_df.csv_311798B42A06430483784C70A44FEDC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Display Plot' datatype='string' name='[Calculation_1315332587098529792]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Line graph&quot; THEN &quot;Line graph&quot;&#13;&#10;    WHEN &quot;Bar plot&quot; THEN &quot;Bar plot&quot;&#13;&#10;    WHEN &quot;Seasonality plot&quot; THEN &quot;Seasonality plot&quot;&#13;&#10;    WHEN &quot;Forecast plot&quot; THEN &quot;Forecast plot&quot;&#13;&#10;END' />
      </column>
      <column caption='EFPG name' datatype='string' name='[EFPG_name]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Metroregion name' datatype='string' name='[Metroregion_name]' role='dimension' type='nominal' />
      <column caption='Purchase grams wtd' datatype='real' name='[Purchase_grams_wtd]' role='measure' type='quantitative' />
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Seasonal_City_df.csv' datatype='table' name='[__tableau_internal_object_id__].[Seasonal_City_df.csv_311798B42A06430483784C70A44FEDC0]' role='measure' type='quantitative' />
      <column-instance column='[Metroregion_name]' derivation='None' name='[none:Metroregion_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      <group caption='Action (Metroregion name)' hidden='true' name='[Action (Metroregion name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Metroregion_name]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Metroregion_name:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Philadelphia-Camden-Wilmington  PA-NJ-DE-MD&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Atlanta-Sandy Springs-Roswell  GA&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Chicago-Naperville-Elgin  IL-IN-WI&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Miami-Fort Lauderdale-West Palm Beach  FL&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Houston-The Woodlands-Sugar Land  TX&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Detroit-Warren-Dearborn  MI&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;New York-Newark-Jersey City  NY-NJ-PA&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Dallas-Fort Worth-Arlington  TX&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Los Angeles-Long Beach-Anaheim  CA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Boston-Cambridge-Newton  MA-NH&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Season:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Fall&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='select plot' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Forecast plot&quot;'>
          <calculation class='tableau' formula='&quot;Forecast plot&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Seasonal_City_df.csv' id='Seasonal_City_df.csv_311798B42A06430483784C70A44FEDC0'>
            <properties context=''>
              <relation connection='textscan.1bg0bg10jz2xx5192dvaj0v8fw61' name='Seasonal_City_df.csv' table='[Seasonal_City_df#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='EFPG_name' ordinal='0' />
                  <column datatype='string' name='Metroregion_name' ordinal='1' />
                  <column datatype='string' name='Season' ordinal='2' />
                  <column datatype='real' name='Latitude' ordinal='3' />
                  <column datatype='real' name='Longitude' ordinal='4' />
                  <column datatype='real' name='Purchase_grams_wtd' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1_6DFD6BCE1C374791AAC915E737A1DFF3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sheet 1' />
        <param name='on-empty' value='none' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='0' fontcolor='#9d7660' fontname='Arial' fontsize='14'>The Food Equation: Balancing Demand and Pricing with Data-Driven Forecasts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Updated_City_Data' name='federated.127pw901ya8ns71gwszdl1vlo92n' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.127pw901ya8ns71gwszdl1vlo92n'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Metroregion name' datatype='string' name='[Metroregion_name]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Purchase dollars wtd' datatype='integer' name='[Purchase_dollars_wtd]' role='measure' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Metroregion_name]' derivation='None' name='[none:Metroregion_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Purchase_dollars_wtd]' derivation='Sum' name='[sum:Purchase_dollars_wtd:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.127pw901ya8ns71gwszdl1vlo92n].[avg:Longitude:qk]' field-type='quantitative' max='-5415944.5097650737' min='-15527312.887512263' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.127pw901ya8ns71gwszdl1vlo92n].[avg:Latitude:qk]' field-type='quantitative' max='6504960.2163541187' min='1882620.3606974948' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#f0eae8' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f0eae8' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.127pw901ya8ns71gwszdl1vlo92n].[none:Metroregion_name:nk]' />
              <size column='[federated.127pw901ya8ns71gwszdl1vlo92n].[sum:Purchase_dollars_wtd:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.127pw901ya8ns71gwszdl1vlo92n].[avg:Latitude:qk]</rows>
        <cols>[federated.127pw901ya8ns71gwszdl1vlo92n].[avg:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{50110076-FB03-4DF0-9E8F-6497B47D6C66}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Updated_City_Data' name='federated.127pw901ya8ns71gwszdl1vlo92n' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='select plot' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Forecast plot&quot;'>
              <calculation class='tableau' formula='&quot;Forecast plot&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.127pw901ya8ns71gwszdl1vlo92n'>
            <column caption='Display Plot' datatype='string' name='[Calculation_1315332587098529792]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Line graph&quot; THEN &quot;Line graph&quot;&#13;&#10;    WHEN &quot;Bar plot&quot; THEN &quot;Bar plot&quot;&#13;&#10;    WHEN &quot;Seasonality plot&quot; THEN &quot;Seasonality plot&quot;&#13;&#10;    WHEN &quot;Forecast plot&quot; THEN &quot;Forecast plot&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='EFPG name' datatype='string' name='[EFPG_name]' role='dimension' type='nominal' />
            <column caption='Metroregion name' datatype='string' name='[Metroregion_name]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Purchase grams wtd' datatype='integer' name='[Purchase_grams_wtd]' role='measure' type='quantitative' />
            <column-instance column='[Purchase_grams_wtd]' derivation='Sum' forecast-column-base='[sum:Purchase_grams_wtd:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Purchase_grams_wtd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1315332587098529792]' derivation='None' name='[none:Calculation_1315332587098529792:nk]' pivot='key' type='nominal' />
            <column-instance column='[EFPG_name]' derivation='None' name='[none:EFPG_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Metroregion_name]' derivation='None' name='[none:Metroregion_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Purchase_grams_wtd]' derivation='Sum' name='[sum:Purchase_grams_wtd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.127pw901ya8ns71gwszdl1vlo92n].[Action (Metroregion name)]'>
            <groupfilter function='member' level='[Metroregion_name]' member='&quot;Los Angeles-Long Beach-Anaheim  CA&quot;' user:ui-action-filter='[Action1_6DFD6BCE1C374791AAC915E737A1DFF3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.127pw901ya8ns71gwszdl1vlo92n].[none:Calculation_1315332587098529792:nk]'>
            <groupfilter function='member' level='[none:Calculation_1315332587098529792:nk]' member='&quot;Line graph&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.127pw901ya8ns71gwszdl1vlo92n].[none:Metroregion_name:nk]'>
            <groupfilter function='level-members' level='[none:Metroregion_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.127pw901ya8ns71gwszdl1vlo92n].[none:Metroregion_name:nk]</column>
            <column>[federated.127pw901ya8ns71gwszdl1vlo92n].[none:Calculation_1315332587098529792:nk]</column>
            <column>[federated.127pw901ya8ns71gwszdl1vlo92n].[Action (Metroregion name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.127pw901ya8ns71gwszdl1vlo92n].[fVal:sum:Purchase_grams_wtd:qk]' field-type='quantitative' max='126386298787' min='-18451320' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.127pw901ya8ns71gwszdl1vlo92n].[tdy:Date:qk]' field-type='quantitative' max='#2023-03-05 15:44:34.717#' min='#2011-12-20 09:20:43.876#' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.127pw901ya8ns71gwszdl1vlo92n].[none:EFPG_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.127pw901ya8ns71gwszdl1vlo92n].[fVal:sum:Purchase_grams_wtd:qk]</rows>
        <cols>[federated.127pw901ya8ns71gwszdl1vlo92n].[tdy:Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{5FD9D040-80E1-49AD-B8D0-2C6BAF41EE16}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Bar plot</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Updated_City_Data' name='federated.127pw901ya8ns71gwszdl1vlo92n' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='select plot' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Forecast plot&quot;'>
              <calculation class='tableau' formula='&quot;Forecast plot&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.127pw901ya8ns71gwszdl1vlo92n'>
            <column caption='Display Plot' datatype='string' name='[Calculation_1315332587098529792]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Line graph&quot; THEN &quot;Line graph&quot;&#13;&#10;    WHEN &quot;Bar plot&quot; THEN &quot;Bar plot&quot;&#13;&#10;    WHEN &quot;Seasonality plot&quot; THEN &quot;Seasonality plot&quot;&#13;&#10;    WHEN &quot;Forecast plot&quot; THEN &quot;Forecast plot&quot;&#13;&#10;END' />
            </column>
            <column caption='EFPG name' datatype='string' name='[EFPG_name]' role='dimension' type='nominal' />
            <column caption='Metroregion name' datatype='string' name='[Metroregion_name]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Purchase grams wtd' datatype='integer' name='[Purchase_grams_wtd]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1315332587098529792]' derivation='None' name='[none:Calculation_1315332587098529792:nk]' pivot='key' type='nominal' />
            <column-instance column='[EFPG_name]' derivation='None' name='[none:EFPG_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Metroregion_name]' derivation='None' name='[none:Metroregion_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Purchase_grams_wtd]' derivation='Sum' name='[sum:Purchase_grams_wtd:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.127pw901ya8ns71gwszdl1vlo92n].[Action (Metroregion name)]'>
            <groupfilter function='member' level='[Metroregion_name]' member='&quot;Los Angeles-Long Beach-Anaheim  CA&quot;' user:ui-action-filter='[Action1_6DFD6BCE1C374791AAC915E737A1DFF3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.127pw901ya8ns71gwszdl1vlo92n].[none:Calculation_1315332587098529792:nk]'>
            <groupfilter function='member' level='[none:Calculation_1315332587098529792:nk]' member='&quot;Bar plot&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.127pw901ya8ns71gwszdl1vlo92n].[none:Metroregion_name:nk]'>
            <groupfilter function='level-members' level='[none:Metroregion_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.127pw901ya8ns71gwszdl1vlo92n].[none:Metroregion_name:nk]</column>
            <column>[federated.127pw901ya8ns71gwszdl1vlo92n].[none:Calculation_1315332587098529792:nk]</column>
            <column>[federated.127pw901ya8ns71gwszdl1vlo92n].[Action (Metroregion name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.127pw901ya8ns71gwszdl1vlo92n].[sum:Purchase_grams_wtd:qk]</rows>
        <cols>[federated.127pw901ya8ns71gwszdl1vlo92n].[none:EFPG_name:nk]</cols>
      </table>
      <simple-id uuid='{C4ECFD4F-C6DB-4239-92EC-F8C1D610C3F7}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Seasonal_City_df' name='federated.0egldyr1vpymzj1fzg5fd09p5kxs' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='select plot' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Forecast plot&quot;'>
              <calculation class='tableau' formula='&quot;Forecast plot&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0egldyr1vpymzj1fzg5fd09p5kxs'>
            <column caption='Display Plot' datatype='string' name='[Calculation_1315332587098529792]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Line graph&quot; THEN &quot;Line graph&quot;&#13;&#10;    WHEN &quot;Bar plot&quot; THEN &quot;Bar plot&quot;&#13;&#10;    WHEN &quot;Seasonality plot&quot; THEN &quot;Seasonality plot&quot;&#13;&#10;    WHEN &quot;Forecast plot&quot; THEN &quot;Forecast plot&quot;&#13;&#10;END' />
            </column>
            <column caption='EFPG name' datatype='string' name='[EFPG_name]' role='dimension' type='nominal' />
            <column caption='Metroregion name' datatype='string' name='[Metroregion_name]' role='dimension' type='nominal' />
            <column caption='Purchase grams wtd' datatype='real' name='[Purchase_grams_wtd]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1315332587098529792]' derivation='None' name='[none:Calculation_1315332587098529792:nk]' pivot='key' type='nominal' />
            <column-instance column='[EFPG_name]' derivation='None' name='[none:EFPG_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Metroregion_name]' derivation='None' name='[none:Metroregion_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Purchase_grams_wtd]' derivation='Sum' name='[sum:Purchase_grams_wtd:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0egldyr1vpymzj1fzg5fd09p5kxs].[Action (Metroregion name)]'>
            <groupfilter function='member' level='[Metroregion_name]' member='&quot;Los Angeles-Long Beach-Anaheim  CA&quot;' user:ui-action-filter='[Action1_6DFD6BCE1C374791AAC915E737A1DFF3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0egldyr1vpymzj1fzg5fd09p5kxs].[none:Calculation_1315332587098529792:nk]'>
            <groupfilter function='member' level='[none:Calculation_1315332587098529792:nk]' member='&quot;Seasonality plot&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0egldyr1vpymzj1fzg5fd09p5kxs].[none:Metroregion_name:nk]'>
            <groupfilter function='level-members' level='[none:Metroregion_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0egldyr1vpymzj1fzg5fd09p5kxs].[none:Calculation_1315332587098529792:nk]</column>
            <column>[federated.0egldyr1vpymzj1fzg5fd09p5kxs].[none:Metroregion_name:nk]</column>
            <column>[federated.0egldyr1vpymzj1fzg5fd09p5kxs].[Action (Metroregion name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#f0eae8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0egldyr1vpymzj1fzg5fd09p5kxs].[none:Season:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0egldyr1vpymzj1fzg5fd09p5kxs].[sum:Purchase_grams_wtd:qk]</rows>
        <cols>([federated.0egldyr1vpymzj1fzg5fd09p5kxs].[none:EFPG_name:nk] / [federated.0egldyr1vpymzj1fzg5fd09p5kxs].[none:Season:nk])</cols>
      </table>
      <simple-id uuid='{A02EDB9A-5173-4A82-A41E-17C75BBA7282}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='ActualAndForecast_Data' name='federated.17uk7y01yvrz2e120nony1dtbabz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='select plot' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Forecast plot&quot;'>
              <calculation class='tableau' formula='&quot;Forecast plot&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.17uk7y01yvrz2e120nony1dtbabz'>
            <column caption='Display Plot' datatype='string' name='[Calculation_1315332587098529792]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Line graph&quot; THEN &quot;Line graph&quot;&#13;&#10;    WHEN &quot;Bar plot&quot; THEN &quot;Bar plot&quot;&#13;&#10;    WHEN &quot;Seasonality plot&quot; THEN &quot;Seasonality plot&quot;&#13;&#10;    WHEN &quot;Forecast plot&quot; THEN &quot;Forecast plot&quot;&#13;&#10;END' />
            </column>
            <column caption='Show EFPG Filter' datatype='boolean' name='[Calculation_510032678854729728]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = &quot;Forecast plot&quot;' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='EFPG name' datatype='string' name='[EFPG_name]' role='dimension' type='nominal' />
            <column caption='Metroregion name' datatype='string' name='[Metroregion_name]' role='dimension' type='nominal' />
            <column caption='Purchase grams wtd' datatype='real' name='[Purchase_grams_wtd]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Purchase_grams_wtd]' derivation='Sum' forecast-column-base='[sum:Purchase_grams_wtd:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Purchase_grams_wtd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1315332587098529792]' derivation='None' name='[none:Calculation_1315332587098529792:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_510032678854729728]' derivation='None' name='[none:Calculation_510032678854729728:nk]' pivot='key' type='nominal' />
            <column-instance column='[EFPG_name]' derivation='None' name='[none:EFPG_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Metroregion_name]' derivation='None' name='[none:Metroregion_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Purchase_grams_wtd]' derivation='Sum' name='[sum:Purchase_grams_wtd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17uk7y01yvrz2e120nony1dtbabz].[Action (Metroregion name)]'>
            <groupfilter function='member' level='[Metroregion_name]' member='&quot;Los Angeles-Long Beach-Anaheim  CA&quot;' user:ui-action-filter='[Action1_6DFD6BCE1C374791AAC915E737A1DFF3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.17uk7y01yvrz2e120nony1dtbabz].[none:Calculation_1315332587098529792:nk]'>
            <groupfilter function='member' level='[none:Calculation_1315332587098529792:nk]' member='&quot;Forecast plot&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.17uk7y01yvrz2e120nony1dtbabz].[none:Calculation_510032678854729728:nk]'>
            <groupfilter function='member' level='[none:Calculation_510032678854729728:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.17uk7y01yvrz2e120nony1dtbabz].[none:EFPG_name:nk]'>
            <groupfilter function='empty-level' member='[none:EFPG_name:nk]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.17uk7y01yvrz2e120nony1dtbabz].[none:Metroregion_name:nk]'>
            <groupfilter function='level-members' level='[none:Metroregion_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.17uk7y01yvrz2e120nony1dtbabz].[none:Calculation_1315332587098529792:nk]</column>
            <column>[federated.17uk7y01yvrz2e120nony1dtbabz].[none:Metroregion_name:nk]</column>
            <column>[federated.17uk7y01yvrz2e120nony1dtbabz].[Action (Metroregion name)]</column>
            <column>[federated.17uk7y01yvrz2e120nony1dtbabz].[none:Calculation_510032678854729728:nk]</column>
            <column>[federated.17uk7y01yvrz2e120nony1dtbabz].[none:EFPG_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.17uk7y01yvrz2e120nony1dtbabz].[none:Type:nk]' value='auto' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.17uk7y01yvrz2e120nony1dtbabz].[none:Type:nk]' />
              <lod column='[federated.17uk7y01yvrz2e120nony1dtbabz].[none:EFPG_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='solid' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17uk7y01yvrz2e120nony1dtbabz].[fVal:sum:Purchase_grams_wtd:qk]</rows>
        <cols>[federated.17uk7y01yvrz2e120nony1dtbabz].[tdy:Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='custom' range-periods='Month-Trunc' range-size='6' range-type='end-of' season-type='ets-none' show-prediction-bands='true' trend-type='ets-none' />
      </table>
      <simple-id uuid='{B0273AF6-3EB3-46CE-9B74-BA64164ED0DD}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='ActualAndForecast_Data' name='federated.17uk7y01yvrz2e120nony1dtbabz' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='select plot' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Forecast plot&quot;'>
          <calculation class='tableau' formula='&quot;Forecast plot&quot;' />
          <members>
            <member value='&quot;Line graph&quot;' />
            <member value='&quot;Bar plot&quot;' />
            <member value='&quot;Seasonality plot&quot;' />
            <member value='&quot;Forecast plot&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.17uk7y01yvrz2e120nony1dtbabz'>
        <column caption='EFPG name' datatype='string' name='[EFPG_name]' role='dimension' type='nominal' />
        <column-instance column='[EFPG_name]' derivation='None' name='[none:EFPG_name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='77900' x='800' y='1000'>
              <zone h='49000' id='3' name='Sheet 1' w='77900' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='34' param='horz' type-v2='layout-flow' w='77900' x='800' y='50000' />
            </zone>
            <zone fixed-size='205' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='20500' x='78700' y='1000' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='47625' id='38' name='Sheet 3' show-title='false' w='76700' x='1300' y='50750' />
        <zone fixed-size='53' h='5875' id='15' is-fixed='true' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='19100' x='79800' y='1875' />
        <zone h='47500' id='39' name='Sheet 2' show-title='false' w='77000' x='1200' y='50875' />
        <zone h='47625' id='45' name='Sheet 5' show-title='false' w='77000' x='1300' y='50750' />
        <zone h='33625' id='47' name='Sheet 5' param='[federated.17uk7y01yvrz2e120nony1dtbabz].[none:EFPG_name:nk]' type-v2='filter' values='database' w='19100' x='79800' y='8500' />
        <zone h='47750' id='35' name='Sheet 4' show-title='false' w='76700' x='1400' y='50625'>
          <layout-cache cell-count-w='40' minheight='252' non-cell-size-w='74' type-h='scalable' type-w='cell' />
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='57' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='56' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sheet 1' w='77900' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='53' h='5875' id='15' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='19100' x='79800' y='1875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47750' id='35' is-fixed='true' name='Sheet 4' show-title='false' w='76700' x='1400' y='50625'>
                  <layout-cache cell-count-w='40' minheight='252' non-cell-size-w='74' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47625' id='38' is-fixed='true' name='Sheet 3' show-title='false' w='76700' x='1300' y='50750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='33625' id='47' mode='checkdropdown' name='Sheet 5' param='[federated.17uk7y01yvrz2e120nony1dtbabz].[none:EFPG_name:nk]' type-v2='filter' values='database' w='19100' x='79800' y='8500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47625' id='45' is-fixed='true' name='Sheet 5' show-title='false' w='77000' x='1300' y='50750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47500' id='39' is-fixed='true' name='Sheet 2' show-title='false' w='77000' x='1200' y='50875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6840E511-F748-47E6-9549-4465ECD492F2}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='89'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.127pw901ya8ns71gwszdl1vlo92n].[none:Metroregion_name:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.127pw901ya8ns71gwszdl1vlo92n].[sum:Purchase_dollars_wtd:qk]' type='size' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.127pw901ya8ns71gwszdl1vlo92n].[none:Metroregion_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
        <map-navigation value='1' />
      </viewpoint>
      <simple-id uuid='{A5FAB9C9-D5AF-41CB-A9FE-C614CA041550}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.127pw901ya8ns71gwszdl1vlo92n].[Action (Metroregion name)]' type='filter' />
            <card pane-specification-id='0' param='[federated.127pw901ya8ns71gwszdl1vlo92n].[none:EFPG_name:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.127pw901ya8ns71gwszdl1vlo92n].[none:Calculation_1315332587098529792:nk]</field>
            <field>[federated.127pw901ya8ns71gwszdl1vlo92n].[none:EFPG_name:nk]</field>
            <field>[federated.127pw901ya8ns71gwszdl1vlo92n].[none:Metroregion_name:nk]</field>
            <field>[federated.127pw901ya8ns71gwszdl1vlo92n].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{18E709BE-5F3C-45E7-8CAF-371E81538D4D}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.127pw901ya8ns71gwszdl1vlo92n].[Action (Metroregion name)]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.127pw901ya8ns71gwszdl1vlo92n].[none:Calculation_1315332587098529792:nk]</field>
            <field>[federated.127pw901ya8ns71gwszdl1vlo92n].[none:EFPG_name:nk]</field>
            <field>[federated.127pw901ya8ns71gwszdl1vlo92n].[none:Metroregion_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D643792C-1516-4C8A-BBB5-03C78756F0F6}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0egldyr1vpymzj1fzg5fd09p5kxs].[none:Calculation_1315332587098529792:nk]' type='filter' />
            <card param='[federated.0egldyr1vpymzj1fzg5fd09p5kxs].[none:Metroregion_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0egldyr1vpymzj1fzg5fd09p5kxs].[none:Season:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0egldyr1vpymzj1fzg5fd09p5kxs].[none:Calculation_1315332587098529792:nk]</field>
            <field>[federated.0egldyr1vpymzj1fzg5fd09p5kxs].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{105B13CD-B26C-42CD-8A0A-16024B91D17B}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='2' param='[federated.17uk7y01yvrz2e120nony1dtbabz].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17uk7y01yvrz2e120nony1dtbabz].[Type (group) 1]</field>
            <field>[federated.17uk7y01yvrz2e120nony1dtbabz].[Type (group)]</field>
            <field>[federated.17uk7y01yvrz2e120nony1dtbabz].[none:Calculation_1315332587098529792:nk]</field>
            <field>[federated.17uk7y01yvrz2e120nony1dtbabz].[none:Calculation_510032678854729728:nk]</field>
            <field>[federated.17uk7y01yvrz2e120nony1dtbabz].[none:EFPG_name:nk]</field>
            <field>[federated.17uk7y01yvrz2e120nony1dtbabz].[none:Metroregion_name:nk]</field>
            <field>[federated.17uk7y01yvrz2e120nony1dtbabz].[none:Type:nk]</field>
            <field>[federated.17uk7y01yvrz2e120nony1dtbabz].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75C63ABD-E4E0-4D39-8564-0F68EFB86551}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.127pw901ya8ns71gwszdl1vlo92n].[avg:Longitude:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.127pw901ya8ns71gwszdl1vlo92n].[avg:Latitude:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.127pw901ya8ns71gwszdl1vlo92n].[avg:Latitude:qk]</field>
                    <field>[federated.127pw901ya8ns71gwszdl1vlo92n].[avg:Longitude:qk]</field>
                    <field>[federated.127pw901ya8ns71gwszdl1vlo92n].[none:Metroregion_name:nk]</field>
                    <field>[federated.127pw901ya8ns71gwszdl1vlo92n].[sum:Purchase_dollars_wtd:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>34.052199999999303</value>
                  <value>-118.24370000000178</value>
                  <value>&quot;Los Angeles-Long Beach-Anaheim  CA&quot;</value>
                  <value>60675809586</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <map-navigation value='1' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight field='[federated.127pw901ya8ns71gwszdl1vlo92n].[none:EFPG_name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{97A2A371-5E53-4B31-BC7A-FF60B433A220}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29Sa8kyZYe9pnPHuMdKqeqNxT18BoNsIGWAAIEQQG9ELjQhgsJkiCI5Ebg
      H+Ba018gf4MAgb0guCJAQCsuBLakRS+4a+rVezVm5h1i9NnNTQv3Y3nCwtwj4ubNepk34wMu
      bkS4ubm5+zlmZzbxb//dv1NuGOKxEfs+vhiPUdU1XMeBEAJJWWKRZbrNRRRhFARYpimuJxMI
      ISCEgFIK2zzHOAzhOA4AoGkaKKUAAEop1E0DAPBdF0opqK6N57oAoPuh9oS6aeAKob/TNfl3
      KSXcrl86n/fRB96XEGJn7AD0d+qPvsumQV5ViHwfruPsXE8phbqu4Xme7pf3aV6f3y+/r0P3
      QWPhbel+SikRdM/1brtF5PsYBUHbDkBV1wg8D5s8R6MU5nHc+3zo+rJpsExTOI6DeRyjlhKB
      56Gua/i+f9TzBoCyuza/5777t8FzwxB+z4DfB8JxEI/HmHSEPwoCrJbLnWsV3cv++tUrOB2T
      AEBaFJgFASZRtEMksmlQS4myroHusxcEiH1f37jtAdB3xyCuvTF3L7yuawgh4HYv/VQGIAZq
      mgau6+4whe0cDiJsug+lFIqiQNARnNmO3xedZx6znTM0fmpLz4Cea1qWaIoCwWiE+XgMAMjK
      ErerFURVwfN9uEJgMp3CNRjKRKMUKtdFJSUSpeC6Lq66SZBPFH3PCWiZMakqVErhxWymr3kS
      Axxs8UBUTYOkLDELQ9AwSil32tRNg1kYIq9rhJ4Hz3WxzXP4rgvHcTRTNE2Dsq41QSilcDEa
      oWkaVE2DtCwxDkMotC/EZAj6TC+1D/TgfN/HZrPBxFiVgH0Cpc/8/3q9hud5qKoKruvuMFJZ
      loiiCEEQIAzDvfH0MQsRBb8vWhX5GIloObHTMbOPsq6xyjLM4xg+GyO1kVK+Y4juuU/CEBds
      EpNKoWlPbNujnawOMYAjBF7MZvqafJKyvRN+n4TryQTTKEIlJRxjFT8Ww6N8T9ynKZZZhnEY
      AkLANofKTnxJyxJA96ABhN2STzceBwEUgKKu9fILAIHrwnUcLJIEqzTVzMNBD65hopPtOIGI
      hT90TvAm6AVygqzrWs+eVVWhaRpMJhP4vo+yLFFVlbUvmxglhACEwLYo0LAx0SRhnus4DjzP
      g8smEuqHtxGOgy+mUwTsWZv3opRCoxTerFb4abXCpiiwSBLdPimK3WcB4K47fgh0HfrjK7b5
      rPuIOvA8jC0TybH4YCsA0M7wDdrBb5nsz7HKc1RSYhqGuNtusc1zxEGAZ9MpgF1RYBQEGAXB
      3iwcuC6COLY+BD6jOQOEbDLBeDxG3a06TdMgCIIdRhhihtlspomMGJqI7Orqamdcx8IRArM4
      RlXXgONAWMZs3jMhKQrEvq+P0Xlx9ywPEZwjBJ5Np7jZbpGWJWql8Ha9huu6WBsMAADbstTX
      OQSuD5kiLB/HKWINP9emB+7c29G9PRCbPIdUCtMowovJxNomrSrcJAmyqoLjOJhG0c4sZAN/
      aSYhmOdR2z6CIfDjSil4nXLVNA2KotiZmQ+9CKUUKinhOg48JqO/L4QQ2Ob5wfvgn8mYYK4E
      dLzvOQshIJsGiyTBupuoXMdB0zSQSkEAmAQBXCHAR6PQrv6HYBoDgHaFL6XEtiiwyrK993wI
      0hD9hBCopEQlpfUePzgDVE2Du+22JQSvf8FplEJeVcirCp5hLQH2X+oxRGgSNJeTOczrEJGo
      TjkLw1Av0wRT/DChlILDVgtzlj1m/GZ/TdPAEQKjIEBaFFaR0qZT7Ik+xmRhtqd7K+sar1cr
      QAjcJwlcx2kJCcAsinA5GuHFbIZZFO2NozL0vb778TxPj61uGqRFgbQo4DoOxp2oa4676cQy
      6ofavFmvsWSMR+86ryqssmzv3oEPLAIRVnkOz3Uxj2M4APpsEbVSmIUh6u5FN8aszQnYVP4A
      7BB335KXV5XWL0xwRYzPjEophGGIsix3RCH9QvpMkkS0lgc/BC7i2fp1HQeR72Ob55h1op9+
      BgCKzqTaB/PZkJJOcjjds++6+PLiApWUyIMAkzBE5Hm4T1OMggBjusdOzOPI6xoKQN9dSyn3
      TLuB5+3pI/yZULvXqxWapsGXl5cQ7H6uxuMd5ZvoYRyGehU2pYYPvgIA7xSjvKq0LNqHtKqQ
      dRy7LYrBGZR/plkC2J3t+XGgVa5NwqqkRF5VSIsClZR7IkFRVXvXALAjUvTBnIGPgakM2lYo
      x3EwCgIkRYGyM9sKIZAWBWLGpCbMPs3+aaXj9++7LiLPwzgIEHmetvTQeL4Yj/WqTSil3JmN
      T4UpbvLvr+ZzvLq42GGKpmngOY5edfn9Op2+Y4pASqmfhwGAlgler9eIfF87VWyomwa32y0K
      UkD5y+lhBhP8YQG7L9WUgUsp9XIa+v7eTEG/b/McnudhsVhoCw4xGrf1cxzDIH3j54RuYyBa
      CUbdi02LYscReKhvDm6NsU0yjuOgkBJSKURBAL/Tawiu4+BlZ7QI2fXXef5oug8fK9277V5N
      +pB9qzN+ZgYAWpNnXlW4Go16l0agFZG2VYW0LLHOcwBALSW2ea7NpTbiss2W5gs3FeLQ8/Sf
      Y4g9XCQKPA95XePy8lL3zfs5lciHQNfmBGm7Bt2/77oIfR8KGBR9CFymtplR+XXIlPpyNoPn
      OFhlGSSAiRE9EPs+ruNY+3oEYBWNTgE9Y9s7sRlJzIkrKQr8tFwi62jG1v/PogNwJN3s6QqB
      emB2kE2DTLXWIyL6CQuNAFoCMEMkCDaznk2htp1jsxo5orW+BJ6n9YGyLDGZTHRb09M8JLbx
      6w0xz6EZlI/vVNAzMT3J/JrmsaDzbbjG7CuEwDyOscxzBK6Lsq5RNw2Kuj4o9nKcYvGx6Xv8
      WOT7eDadWsUiavOzrgCEpKoGiZ8gVeu4SoqiV2yiGcqczQDsESOf4TiR94HPOq7j4Plshqws
      kRQFfN/HaDTS4pApsvA+ToUp8x7Tnq5lE2WOuRY3k5pGANnpRdTeEUKLqByu42AeRRgHAV7N
      51BozeCnPIM+vcd8HoeMHTSeoFvZbWNQSv38K8CpWOd5a2u2mBw5AQ89GJuViMDPOxQro5TC
      LI6RVxXutltcjEaQUqIsS4y72Bjqy7YCmbC1GxJ5PgRsBMT/S8N+HnWi1iJJtDk09n2UUqKs
      KnzR+XoUWhv7tihwPR7rmbbvnvqeg+0c24pv6kcctudM+OgZIHBd1E2DbVFg3Cl8fUTPZ3ci
      ZtuDtZ3X94BMMUYphcj39UxLZlEesMbHcYiITYsP/+0hOGbl6BMFSRyy9UdwHQdfXVwg6cIy
      3mw2CF0Xgevii04RBlrL2dj3MYtjbPK8N0L01Hvrm6SOMYrY2nz0DLApS7iiteUC7+J0bFYR
      Og68C6qyiQMmYR6yKpEtn5/LwwjoembYsk0EM3Ho2qfgWMYxJwH+3TxGehZ9F6KNCp3FMVzR
      eorrpsEXnaxNCFwXz6ZT3CUJSikxi+NBPcU2GfWtmqe8O2DXh2Dij6IDnIpGqV1XuyHr0kuj
      B2HqBa4lQI76OeYBmgF0XOml767ralmZy9UPmc3fhynSsjzohaVrmDBlbT7Z8HtxHQdv12sA
      wDgMkVcVtiwmSAihn3mjFKq61gF0h7DKMizTtPe50biSokDWE3NkTjz8XELTNFiv158GAyhg
      5wET4RMTFFW1JzvblDtTAT5q9lBtck6ft5fPnEEQIE3TnTBiOtaHIZm4z8J1qN0iSdqguR6Y
      jNmnb9juQSmFWRThi+kUQghMwhDTMMTEiMgUQsBzXSi07y88Mskl9n292tP1+F/SxQgt07S1
      Dh6pKxGjaMbsxNePngEiz8PY95GVJX5ar7HpgrKWaapffiUl6rpG08WS7FgsLHZuwC4Hm+2z
      zisdMjNeboQxm32Ox+Mdy1Afox0r85+6GsimwfPZbDBO6dA1CTWz9HBrkJQSvhGvRYFr9BvQ
      En5WVZBozd7H3IstHIL+6i7uP/J9fHV5ievJRItV5up1SNn2PK91HB58Cn9E+I6DX3bxHpWU
      eLNe4+12C89x8GwyQaM6NzcL9TU9f31Lve07XzmUUoh9H3ldI2KxQ67jYJmmuBiNrJYnWgny
      PEfUBYkdUrB58N0h0YSLWEC7QmVl2SridY1pd81DCSnHgK+iZrw+bzONY3y/XKKUEi9ns737
      cIVAWddHOemA1ulpjr/qUib9njiuQ/qVbTUbjUYfNwNUTYP7JEHseRiFIV7N56ibBussQ9HN
      +OQFBdpUyjgMd/QCoN8hZeoPNitI3C3ddE7geZrJTIXbvEaWZQi78ZiwjeEhcB0H4zBEo9SO
      6HAs+LVNMc91XZ3YY6ZWcsIaBQECz8MqzzHt/AAAtPgzCQJMe/I1bEjLEllZ4osutZIsTuGR
      Xm5+b/Rb37U/agYAgLs0xVUcI/J9CLSrwnVnc1doZwulVGuHlhIyzzFlFgeTEUyYJtC+WZgz
      Cl9l+toT4ed5jpBZsPpk72PEg77jQoidRP9TMEQklNHGJwb6bDJ74Loo6hpZWeowCUcIXMYx
      plG0l687hFkcY1sUbdKN40Aqhbkl5LoPdcegPA/Ddp9KfQKOMADaB+C7rs6EAtp4E6oK4TmO
      JszSkNuHiKuPAJRS2HTMxH8TQugHLESbbBEMzDDcHPtQq9BDcbvZtFl0AyuDzZRMcF0XeZ4j
      YP4XLvZxXetyPMY8jvfSEymz71Rd5sVshrorhBD5vjWozQbZNPhhsUCjFJ5NJu+qV/Sssp8E
      A5RNg+9WK4x9X0cdmhAA1kWByPMwj2OrGGTO9hzmKgBAx7Mr4/c5i8Ev67plzB7CrqpKE1Cf
      uDMkou3c45EWDwKFRQ+hz1pl6kXmuM2xTboVz3a9U0IzCK7j6FVDCHF0rFNalqiaBgotPcRB
      AIH9ZHvCR28F4kiqCt+vVnsRhvTQX81m2JYl7pIE685UdsqD54QoO/3iEBG6jtPKukY7eulm
      FpxtJuR29j4rFWegYwlqHIaIjXIqQ7BZrGwipK1NX26x2bf5W9WJroSms/bYJqShcTdNWyZn
      maatxQmtCNbHOFrBH+z5I0QppU6WMW3+ke8j8jxknWOGrA5VXSNnvgITtlmrlFKXCuEwibDu
      YmD6+iaz4TGzt62NaQq0EdGp4sWh6/Mx8JnTlKdPwd4EoRTerNf4YbHA/Xarj9dS4j5JdI7G
      KXAdB77n6XxlEpdtz1Tnh5x8lT8yFIDbNG0VXiaX0k0+n07bIlpK4af1Gqssw22Xk9zbp0UP
      iIPAmnBhPkzyhFI/JjGGYYiqYxAbgZ0Cm1gyxBwP6X9ofKbZ13aOjdhsv8vOpk+62s12C6C1
      snH7/qkY+T5Gvo+4y/E4hE9CB7DhvjOFXo3HO/Hmoefh19fX2BYF7pIEb7oHO1cKoSUvFNiX
      //lLlZTg0TOTULJMn2hjEmufHvIYyvFQv/z6p1zLnBx4H6Y5dMj5Zl6zyHPUeY54PkcjJWqW
      j3yqD4Mz3yyOMYvjNkrA8szNcXyyDAC0OkG1XuPVfL6XLzAJAsSeh+8WC8RRhKookNT1XkwR
      /08YmsVMZnFdF6ppkHWhB7YHLYRAmqbaHGojwCFTbcG827YxHstQXJ4fMgiY165ZWEWfomv+
      zhnGprMkRQE3jpEmCYTntebOrhjCQ2DVnYyVkU9EhE+aAYDWQvTDcgnXcRC6ri63B7wrJgUA
      q+US8WyGq/F4cBXoI/6+71JK+F0pxjzPEXezj9mvWdvzFJEh6uokmVaaIQK29c+9yEVRaIYc
      Al2bj41WPhv4NcgbbpP/Ly8vUSmFoqrwbD7vZSrzHoba8GdUNw1+Wi4Rd2bgUZfHoIzI0E+e
      AYC2nIquLtzsVn++iOPWGiQEGgCvNxt8OZ/3hsj2mfEIRVfHlLcnCw7VAR2SoU05fujlmrP8
      KTI+F1P4OOmz53l7Fioz7JnjlFXGvIZZyU80DUadifY+TbFareD7vk4qKqmmqhGC0Qcbg73d
      bDCJY6zzHKuigOc42qQdeR6ed+HbT4IBCJuiwGq7xcvZDNMu8d4RAuMoQt5FD5p1Y4DjgqcI
      tZRW5eoY4rTNaDbRwXbeqQrukDnzVDHIHPuxTFsUBaIo2lPYgXfMdnl52VadKApsNhsAgOv7
      SJIE6FaKY8fZKIVlmrYFe5XCHSvLUrFJrC5LzMoS8acQDXoqwigClMKb21u8vbtDVpZYdbHo
      UinEQWAtkNsH88G7Fm+uUgpZT7FbgqmMHkvUptn1fWH2ZdODHsusKgfyErhXnMrJT6dTjMdj
      REGAy4sLhGGIN2/eIEkSXUGOzjXjr4QQWGUZ1kUB1TRoWD1UEwpt/SngiYhAO1AKs8kE0/G4
      TdToZgE3jiHKEmkXVhGxTRWGwAlXKtXGuFvOS4oCoePAlvjndPEsvFSieY1j5Nw+BfShoLHU
      UmKdZQg8D6Mg2JPvq6pqzZaOA78jqrIs0TSNjni1YTQaAdhViOm6TdPgLkmglNJ5xFzUbJoG
      cRzD9304joMffvgBX3zxBdbrta7GQaDPUil4VQWpFILRCHWWIXYcSN9v95RgWBcFLj72aNCH
      oO6SZChMOp7PAbQvQTYNbrZbvWEHn6FM8WRnKa9ryC7xRgd6GQFhse8j7LLCbCvE3XaLq9Ho
      aCtHn9LLyxf2MU5SFMhYgrp5j+Z3RwhcjEbYFkUbdxWGOz6Qoih0og/NxBQlmiQJrq+vrffA
      x0nfCT+t1yjqGl9fXwMDExHpKa9evUKe55jP5zvlZ6qqwpubm7ZeKIDpfI51niMvSwjPQ+y6
      cPIccRii6EyjQMssd0ny9BhAAbhNEjzvXj5/6FlVQUgJJSXSTsEiJY0sOLQ013WNuq7bqM5O
      sXY7xY565IoshSLzvGB+faXaKFKHbUTRZ4EyCX/vHi0E03TxL0WXfkiJ+zzXgMOmd/iuq/cg
      uGRVLoIggOd5KLpSlXEc6+QYfyBE2fM8lGW5Z20SQuDFdKrzOWyhJOYz4s+VVoqirrHIc6QA
      lGjDHlLmRVZKIa1r+GEIT0oEUkJEkRZXt2X59BgAaJe3q9FIh8OK7iELIRB7Hqqy1PZt2kxC
      KYU0TRF0K0PR1f4B3smoFFvCiYdmfD2bWsyDruu+824OmFttTDFk+lSqDcYjT3TgeSjrGi/n
      c1RStgzXY660EVzU5T5QbVZyJk18H2EY6irZZlGsPriui8LcQKO7rull52LSIdNzKSXebDYo
      DB1D9qwklZSo0Jl08xyR40B6HiopnyYDAK0oxMusO05bbrtyXThBgHEQoCzLvaJa9H+1WmHW
      ZTfRSgHsE64p39JL53Z/pdpKyzRL02+2/niyP19JeGUK85zI8xB0vggKfrNZu2wwM8ziIEDk
      +0i6bacEgMX9PXzf13oAMUCe55hOp5BSYtoTpWuCGwD6fCFDek4pJX5YrXqJnRA6Di7HY6zz
      XCu8eVVBuC5i1wWKAl4YPl0GWGbZTuh0o5QOoJtEERwhdojUtM/TTi5DIFmUK29KKfi+j6qq
      9G6HNr2At+eQUuL+/h5VVeHi4kLn5VZVhclkojfq8DwPeZ7v1CrlOFZZ7vOFTJjXmhiSxBma
      OCj189A+CebMzms2FXWN+yTBy/lcW9j6rFBV0+DH9fog8Y88Dy9mM9xut5r49XgApFJqsejJ
      MkBalkirCuPO4aJUmzLoGg4iDi5+cMIwa37ytjYIIfSMycUFmzhjKrO0WgVBgLquUVWVtrSQ
      2BZF0Y4I9z4my2Ns+s+fP987RnnCh5LvbeZbPmYFYNpNSEOV+Uop8eNqhVq9K5Fj3rUjBEad
      k2ud59j2FMUF3olFT5YB+KOkF+Vifwk+xsTYZ7rkn/uUOM4EvJ1N4QVaEery8nKnnS1pnpsB
      H2Ia7VsxTB2jD4fKSBJ4OqhtArFlbPF2juMgKUv8tFq1K3McI/Q8vN1sQBpA6LrwXRfX47Gu
      VgEAL6fTtoJInvf6fp4sAwDAMk11gjZHn4Jpc1YdIi4iUNtMR1YQADubP5viFv+Nrwh9zqnH
      8AUMMXQfM1NlBvP3Y3wYQOs7oO1jTeuRzSggRBuz5DkOnk+nmHTvcpVlWtfxXRdXloR7vpWr
      5zh4s93qFcNBW9PUFU8sFMKEWWCJexL75Mw+06QJPgMSE5j6AABtVbIRtPnZVnLcxiR0zpAv
      4BD6zhliBBsDHLo2J/jFYoE4jrWRQIh3xXfJx+B1u8XTc/Q8D+PxeCc56WI0wlwpLQIeGgOV
      imk6C9dFt4oAT3wFoHS7kHl9h5Z1Iir+UG1iC88ROHalsJn2zLqb5vX4eTbiH+qfcIzybROH
      bP0dm5jOQaVVAGA+nyPPc+3dpVWRFPuiriFVW/5ESqkTifrGTj4ceh99zKCU0ko9behH7Z40
      A0gWGUqzjK2khylemGIIWWLoOzcdlmW5I+PbiKeu6x0RiPfVZwocQt+sbxNrThWb+iYK2+7v
      5j0cwmg0QtwVLODXo4C5bZ63Ye3M4VUOKLIAdPStEK3zklaUoahcALrgwZNmAHJckRJMThwz
      SIuLGsQofDXwPE8zDjERnRd0/oTAqBZtgzmLHxJx+mbiYzE0y5Np1Xa9PsLxhEBhRNRS3+Z5
      /Dt51KmtzdqmlNIh0sC7XGpbdT3zM12fF0WmFYQqcgDvJALPdfHjatXe0/Aj/LRh2otp9nYc
      Z6d+p2nOI4IncMYwRRZ66CSP2kBMJ6XceSE2q4dNBufM+BD02fr5qnQMyqKA57p7eQS2cdFz
      4sRvGwMXIXk/Ukrteaa2Q3sD8L7oO/lKoihCoxRukqQNihNC08aTZgBTUY2iqC2mW1U7L5Ey
      ukyYsraZnMEf+iHiJEXY9LxyhdxUos32NlNhn+7A8RhWIwB6p/hjcKp4ZI6dJilbXJWtvU0v
      4s/mjjvFuJn1qNF9ojBlc/pMsT8m4Zl7DpifOcxz+2ZZmmnJwsFLpBxiur6XbF67z6LFz6P/
      x9rvOeicwPNQDOQ+c2gls1NU+67b9xwo5MJ8d7b2Q2NxXRdJnmOd53t7GQNPfAXw2CzLZctj
      9gIzFWN+jM/C5rLbp4jSi+MhxTb0KceHiNwcpw08lPpYRijLEpvNBuPxWIuAi8VCX49CMYbu
      hWqMDrUzn7Eplpr3ZpqMbToCedQ32y3GYdjuXMmviyfOAFQYq0+BAo4LBRg6p65rrQDbYDIS
      hTGQ5cN2zarLibWJOTZiof+cyc02JtEfw1DAO2eeEG0dVAe7s/OQmNP3/A6B9AHeL6+tBGDP
      kcafFSm/juPgdrPBpivYu2GRqY4QeDGZPG0GOKYwUh+G5E06bpoZj5XDgyDQziGToDebDcIw
      tDIAwVaOnb6bu+HwY4fuyQbHcTC/ukLdNAgdBxNyKhm6TB/eR/+g1RIAsizThXodx8FqtdLB
      jFx0JcbYbDaYzmZYZhl+dX2N77pVizANQ0yj6GkzgBl6PBQAx4+b4odJ6ASe7GESPw9pts3k
      dD4fH9DGrGdZhiAIkJUlirrGRZda2DcW87rHVqE+JMcrpbBcLhGGITzHQZKmGHeV7ujeSad6
      LEWb4DgOpJSa6MNuk/Q+Jo/jGGW3Z5jneXpy+eXVFcq63ts3jUJknjQDEEwTGSFNU1RVpWPa
      hRDaaVXXNYR4V+qE98XBnVxcHFmv12iaBpPJBHmeo65rxF18yng81gqxTZalvQW8bsd18zgf
      y7GE18csQL8Hlc7L81x7a29ubnTpGaUUkiTBixcvHp0BhBDaZEw1jOi5KKX0syQ4jrNrbhXv
      fEBbIylHoN3F8qPfIul9IICdTTJsSz7Z7qkcB5ne6rrGaDTS3/km2BxhGCLP873Zn8uwVNXN
      LJgFYMdbaRNnPMfBnM3+Jk4xM9K4+LVs+oMJ3/f1DEyzapbnKLrarPMu5/qxwfWLMAx3MvSO
      OfcPd3f49fU1hGi3deW4Go0QfAp7hL0PHCF0SmQfA0wmk51sL1pyZ111uSE5nCtjRPD8OhcX
      F71WJBN03PQ2k2w7ZDLt6/MQDuks1IaYnxMfrXibLo/6Q4GPLwxDvSrbKlZz0La6SrU7B5kM
      wM95sgzAt8cB7KsA3/uK7PX8RQ/JyKb5E3iXJEIY8g2Ysy83T9pWgyE53fbbIcuMbXynWG36
      bPKPDT4W3/dRFMVgTrLoRJ+vmHnWvBuf+YeeLAPwPIChrClTMe07doyjia8Ex4ITUV+M0in9
      EfEPlTm0KfnmvRwDR7S7P5oh0iZIOX1oKAeNi3Q0WyqrbWwAkFmC6WSnV/i+/3QZYGbs7WUD
      d5j0QQiBRZpCoN0aydaHSWzHmEJ5e2DfQsVXF35ekiS6RAiFdpCdnsyGbqfgNU2jZfeh8TzU
      Xj8OQ11iZIgJ6ro+OmneBnP15so7h40Z1nlu/U04DkSWPU0G8B3nXTHUHg8txyER4+KAnGsz
      c54imvRFkdraU+AdmSJJh6HfsyzTFdmyLAOw7zQC9su59MHWhiuoHoAkyyCDAFHPnmRkvXmo
      uGRj0KHJhE9strsrpYQThvCfqggUd1uqDtn/gf2Xe6q4YcI2Y/fNrny14AxkilMmoijSIcJE
      7DxEm/cNYGeHRw4K834MzDpfR1EUO5tqU9KLWSbmfWGL1LVBKYXI8/aUYADwfB/TOH6aDJBX
      1cHNFswH9z6Ez/swiW2IGfqsU0Pg/dFMb1MKlVI7ifND/bwviOEoJIQsY3VdI0nTBwXg9cH3
      fZ1b3MfAfGIZ2lxbqU9kn+BTUXcVzRyD+MwZ17b7eZ/SeIwoRTAZy7Y824j/MZiwbzycMT+k
      9YY/U9d1MYpjbOpaJw31jY/G1Qf+/sIwxHa71XnF5vvhzzryXMxHEfKy1pGs/FpPkgE4GR1S
      Sk3x41R7+yGiNc2ipzDSh0SfXP++sEVwTqfTwdTGtNvOVqk2cpTqkI5Go97VbTweDwYVAsDr
      /DX++X/45/hu+x3+/ov/HP/ly/8aaV7DcxxdjuXJMgBFLnLwmcG0xROqugY6k1c20DkAACAA
      SURBVN0h5ViINvLQNCPaZiI+BnM25ucC2DP1PRZMcazvGbwPbM+MzLJDz5MK75ZliTiO9Z4A
      Q442Hlm7Nw4o/Iv/8C/w79/8ewDAX/7uX+IX41/gt8HfwRdsF8onyQBAu4HeiKUfAvtLvykW
      1VIiKUtMguDoArDHekKpnLgphvAViJcC+RAwmfKh5s+HII5jnZ5oYjQaaX2GQGXQzfGZ4mTv
      BAWFH5Ifdn77KfsRf2caYtzFegFPOCNsM1ANDHiXdM1NkK7jYG4psvQYMJlvk+d4u9nsMeHP
      KRo91q4zp1zPBnoG/O+Q04xWi758YwcO/uLVX0B0hRRjL8bfe/738Gw6hdvlM7iu+3RXANk5
      qGzRlpwQeebRIbHnMUAvOK9rbPIcvuNACYH5e9rKTZgxREPK/WOCmHgoUb7vPHNs5mfqO89z
      uK57MGzlH//2H+OXk1/i2+23+LvP/y7+9sXfBhR2xvdkGcARYq8GvU3etcngfel470ssNLMJ
      IfBsOsWmKLDMMoSeh8suWvR9/RB8vKfADOGwjYMzEydmelZmtKv5HKk6Rp94abOemZ8pkcis
      +2ObPHzh4x98+Q/0OTYGfLIMIAC9zebJ536AFWDPWwxg5PtY5TkqKZF0m7rxF23DEAHRdWwW
      LfOezP75OU3TaBMjH/tms0HTNFitVnj+/DmSJMF4PEZZlnjz5g2+/vprpGmK+XyO77//HlEU
      4boLSQZapZUXEjvmmZlMQI41W6LRUD997Z4sA3hOu/M4v+U+M+RQyPGHmP2pv+fTKTzXRVIU
      bRhB97tZDYFfnxxNtvHYYmS4z4P3NxQfRCuRqYQq9S5a9e3btwjDEKvVCpPJBJPJBN9++y2E
      EHj79i1+8YtfaPOmzeJlwuYN57/TZ0pAMsd1DD4rBrgaj2HeLr0MXsiWP8Q+ufOxQEStGU4p
      XI9GuIxjeMZqxRXiIbMqB89JsDHPofNNpjNXz8lkgt/97neIogij0UjH6EdRhNevX2M+n+uw
      jNvbW1xcXOwo+I7jIE3THYboG4vpmKSJgfqx6QwPWbmfLAPY9ojlVgYb+gjnMcCtPOb1HSFa
      /wOwt2KZ5tKh/m3fjyUKfh0ey2PqS7/97W/3lFylFP7kT/5kpwSlWfALaIl6NBrtVN47xfK1
      2Wz0tlXAO98BgB2HGAX60TXI2kffkyTBaDSCEE80GA4AFmlqrRvfZ4cHdhmglhIZ2xb1McCL
      85ovPSkK+K6LsEswP5UR+1YL2zEbbKuDbZa9ubnRRW651YwcgvSdV9DmCMMQWZY9KJPMLKzL
      01FXq5WOQeJ7mV1eXqKua2y3W92WommzpxoODQCLLINAm//Jl+Fj4ToOapagwi0d7wO+PxbH
      OAz3NtI+VScxmbrvfPN5mFYdoFWSqfoCFxMXiwWurq7w13/91/jTP/1TrFYrhGGI3//+9/jN
      b36D7XaL6XSKJEnw7NmzvVAQqv1PpkyqKNHHpPy7ec8RK3VOucuUG8HvnfYYcBxHe5qJQZ4s
      AwAtE0zDEAF7yFyupNIbfbAlwHBisRHYIVu+uWGeVlItJj1uVjTPMZV5/tIPbVrH76VPtyBT
      I//d8zx89dVX+P3vf49nz57pcI2iKHB1dYX7+3sdo0PiiW13TQrR3m63mEwmgyuTOV5uBaOy
      LGbfJihJiJ+jj/U+qScAhTZB2kaUpjKsz2FWE3NWbJoGRVEgSRLtSaTN7Og8CnkYj8eDugYh
      SRJdsHcymaAsS71DpG32Mwmir1/zGJfLbTCZwKYr1XWN1WqlZ/Y0TeE4DqbTaVuIajrFdru1
      5iiYMzzf/M8mdtmYgnabMa1pQ8+BfzcnQOCJMwBg9yiax22EZktRJHiep18+xZRQjikt76Rk
      HRqbUu820kvTVFtVpJR75j4+XtvYhBDYbDaIokiXEjTFGNd1tfhhm3258mh7bi9fvtw5RjkH
      pIQSUffJ+Hw1Kcuy3U2zM1fbxDPzWfF8AK5I28Q6+p38BtSWP4snzwBpWSIwlGFzJjCJIK8q
      TJijhc4BoAs0UemUQ+gTieia3KphgznTmSKReW7TNMi6Xd6pTZqmuL6+xnq93ikBQ7E0fNXj
      fdrCKWzX5Pd6CPxZB0HQrqZBgEpKXcjA1g//jUpLklnUxjD8+5Dn+ckzQGmR8W0MwBF2G10/
      RlTmIZ2AvzyTyAHsEZ85ftOqRIxJcVDEZEK0lZzJycZXGIKtzLtNKRdC7OQb2/wPSqneWH4C
      VW/2PA+BoW/0jYGur5RCmmUImK5igptk+/SMJ88A66JA4Lq47BFJbLoAbQIxlMXE0Wd1GSL+
      IauUjQFsMx2JOHwMPLDP7MtjJtY+RZmP2aYz0Hcq4rter7U1h0Q/0mNMccl2LRoj6VFUBtHc
      YNxclVzPgycElKHb8PFyixtf6T8rHQAAbtMUEAJXPWUGTUKl77yK80MwRLw2Ja5vRRoSLR4z
      39aGPqa+vLzUii7FDZFczjcCGRo7P1ZVlWYm0lHMCYjKvoRh2BofqmpnGyXb2G2BcJzxPgsG
      AID7NMUsinbq19hmBnM2J6Wrbxsl3rYPJgNwgretHjymx7b0m4xlY5o+HNOub+XisyzZ3UnZ
      NQPoeHvbGEzLDNU5on2VqZ4qtS/LUh83xcah+6TgPN6uLMunHw5tolEK26JAKCWKukbo+3te
      XpOw6DdaCR5aBtymSNJ1zOsBu8rokKhk9v1YMInLFMls4+ljZhtMZZoYYKiKBWWMmVacLMt0
      6XTzHtbrNaIo0nsTA+0qslwu9dZNnw0DAMDb7Rah52EUBLgy0iVNu78Zy04l08mseApMEYdg
      zubAbkHetCwRuK72EPcxj818aLNunTLePn2J/z+W4N8H/Bo2MTLs9ivgzi5+Lul2PB6ILG9V
      VX1eDABAb5RWSgnfcZAkCYCW8CieJc/znQ0Z6MGRohfH8dEx7cC+pcckfE5w9D3p9uN1e7LU
      bGIEv55NzDKP9YlQttXKvB/bZ/79EPPZ+h4KkBu6Di9Tz8VEMlnzc7h1ajQafX4MkJYlnk0m
      CLqZluLL0zTVhE9hvuSUUkohTVMtCpGn8xQmOFYsIIzDEDiSgEzi6JPfudXoobP2McR5LEyl
      31y9uFm277r8OJk7yWNPyq/ZPz//s2MAhbZicNDZw6fTKZRSWsakGYR2i6ffqLgrD/k9lgnM
      2XVohs2rCpWUGHXbEpntbJakY+TvQ31wkc8Ur8zfjrnXY60/feXgzb4O9RsEAdI01X4Ox3GA
      A2LgZ2UF4ni73WKZZXg1nyNi2VU79mG2vy0XE7idnWJ4jjWTmoFwJhzHgQMg8jyIbnXiRE5M
      NxTAdwimOEWfyeTIZ1oe0nzIosMtVsdaggBYzZPHrih8BfF9f6cwsFIK6yzDzIgCMJ//Z8kA
      CkAhpQ6UA+xBYGYItEkIdJzKlQ+B7OTW8TCiDAaYiRxOfANwPnazTz5mzsR9+sT7eL5tRGbq
      PkN6TN99mH3z33hiPN+AnK7lind5CpxRaVL77KxAHL7rIjJ8AvSfz7p8ZrM5XEjuPIYJbDCV
      4mPa2z73HbcRne1aVVUd7VSjqs/mdU15vk/xJ9DeBrTSUJtjVgDBiDuKItzc3OgNCXX/UsJj
      u3jy8RM+Wwaou72jRkaBVRPEBKQT9M2gruvuMAFf4ouyhD9QyRg4HDNEbY4hDurLjBPqI34A
      e9tDDaGu68HjNqtUXxvP8/ZEL9Pk2cfEXCScTqc7EahN00ABWG42mDP/An/Xn6USTFAAflyt
      8Go2w5glSZyyzy4HMYGpE0gpEXc1LD0jwpSf+z6wiULmbGrK5UPXPEaRJVD+gxY7ut1pqJ9j
      lGZz3Lbv3HpFjE32fyrPws8BOp+KlFgsFnpiovFRNOlnywAA0AC4SZKdVQDoJ5BDGzOQnG8y
      gVJKz3IfCodMoebM19fO1lcfmqbBdrvVqYYUHpFlmRaTOLFROMneTK3sHm9zxeJGCBJ9bO2o
      H8914XeVpoF3kauUNvmk9wg7FqWU+H65xJfz+U4luaEZlI7bYDLBsXLtITPmUHuToPv6sJkb
      +fjMVM9DYyExhN9vmqaQUiKKIp18TrNvlmXwfX+HAXzf1+Zkk0H7RE6O7XZrLZFIn8fjsc7O
      I+ah63/WIhBHVte4TRK8MDZyMy0np5jneMYTiQl9OGZWNo8d294WUGe7/qF++sZydXUFId75
      U3g/tlKJjWGeFGI3Y8scR99zV6r16BZFocWfvlXE7Ic/wzMDdFjlOULPwwUrvcEf2hDxc9Mb
      taUltq8keJ+SOCSf89nQtiINiXGmidBs38fofTqEeb9992ZallZZhlm3uyXwzoqWZRmUUtoD
      Px6P9WdSlIuigBBC73xJnnvafMMcB4VPm+Pn93hmAIaKxbDbZhOaxU3vZR+T0MviL4KjKAqk
      aarDLagPEi0o4Z4reLxvALi5uUEYhjvlRYhYpJTIsgzT6VSXAaGaoEopHVfP++xjAH7NY1cK
      G4NcGNvX0ipB5tAoipCmKQDokOiyLFEUhY7DIgdlWZbaQ983+9vC2HnbMwMwSKXQ0IzHfhcQ
      cH4sUP+/d0ADeP/ZFZqvo70HrtszIrJVl6A2lLhOdnDy/BIRUzFaGwMQRqORVkQpVolWnbqu
      9X5aFNxXdUkkdC1igD5Z2yaCUPzUMfqNzfpkTjCO4+hQaFJu+QpFx3h7bvkZMg/bxB7+25kB
      GNZ5jm2et7Ol48B3HLyYzRCuGuT/6lug7kIEvk0Q/ne/hnzxTvniL5p7kElWtYVMTAz7tJnC
      x5U1amO+6PF4vLO7Cm/DCYRXcbOZFk2CtF2XZuswDFEUBeq63qkQ1wfbuA+JlnxMXDyj5wrs
      ho7z88x+TZGNr3RnBjDQoNs9pmlQAFDrNX7x/wlN/G0jheY/buF++cWeF5M+c3Bi4zBn3L7q
      czYxhBOnzeQ5dK4JkxhNUccmEvFKbLzko+/7e/6OtCx3Sr9zhjDzLmw6kDmum5sbvHz50spE
      5vk23Yw+nxmgB6HrougIO60qyNG+Eism3s5MAvSHU5y66d2Q5YPbzU+VxakP2zgfAhLVOEiv
      oVRSx3HQAFCehyzLtLmT+wZsY+Qgf8NoNEKSJLi4uNChG2bpFooJIs8837fY1veZASwoWLSl
      UgqLrxxcfT2B/P0WAOB8OYLzZ3OrbK+AnV3q6WUMwRZ0Z4olNhwiXk7oQ/309fmQ83kSiu/7
      OiS5KkttjycFvCxL3N/fYzKZ7G15ZLuX5XKpM7v4DvRcJCKTKmXv0YbafavwmQGOwF2RoPkv
      ZrjaXKJpGizmQChzzPxdRVgqhdvtFs/YNpz0IvrAZy/aQogfA/rlZNs2RSZsZswh2JTGoTEP
      gTu3iCk4U/m+j+fPn6Ou64Mh3sQ8VE9UKaWJmxR6Id45IYMg2KsDat7nWQQ6AYs8xYImqBxw
      CoHI99tN7jpRIvQ8TOMYm6LQ/gSeVWYDWYH6CNgUs2ymyiEMMUCf3tIng/cd773OH75F8pd/
      CWc+Q/yP/hGURVk/VLMUgM7Ddl13x3RLs79pYo7jWHugSUTqExvPDPBANEphkaZ4wTygADDr
      nF40O/snVpnrI25TMT3EBDwo7RTYdBruOLPBFJGEEHCaBnf/7J+hubkBADRvbzD+n/+nPRMo
      gRcYtvUPQBfk5Ukvfe2HnhNnhjMDvAeKTrwhpwzN5hQuTATIbdxD4swpM/shEYRnsh1qZ1ZW
      G7IqHS1Krddobm/19+qbbwb1Gkr0MZmWm0Adx8FoNNrbc8DWH5WGNK0+pin0yW6U/XNgm2V4
      e3OD1WqlIwzhOHCjCFdXV3j+/LlmDtvGdyaOJX6CaR+39XWMvM5n5b4Z2iQkEl9sOb0AIC4v
      Ef3FX7RfXBejf/gPB/dVoN9t29Pu2O07a9JQP3SMPwMe4s6fyXkFeA84rova83DFguiElHib
      JJjGMZSUePHiBYqiwP39PZRSmEwmvbs86j4OKL+PDdM0ShYTm53dBhtzwHEw+V//F4z+2/8G
      YjyG+Ft/C4fuxiaq2GDzvfTdE7XpmwjODPCe2BQFLkcj+J2p03NdfHVxoUMpyALy7NkzAMBq
      tcJ225pT5/P5QefUQ9DnnOOyvKm09m2UfapIttOH60L82Z+1n1m/tj75xnamWMOTlKgAr3kf
      JvruxWSEMwO8J6RS+HG1wq+vrt79yGaeoqoAIXT1iclkoveruru701YMvk/AsURHTieTiWg3
      RlsUah9sVdVsILGHK/Wn+An62gVBAGmISGZb2hiDjh0SgWzXNRn/zACPAIX92ZaI5PvFAkVd
      4/lshm1R4Ho8xrQzi15cXABoLSD39/cQog0EO7SDIs3WRVHorZS4/KxUWxfT3ADjMdA0ja6m
      FwQBHMfRiS5BEAwWEbaNgxNkkmWYjcdW65MQQm9wd0j0EUJoJZjQt1qcGeARUEqJRZbtlF8X
      QrTxRFJCAXizXrdt6xpSKcw6Jw29qMvLS73E39/fD16PdmA3t12VTYOkKDCLY8xmM2y3W+R5
      vlcd+X1AzicS42g8k8lEV2MbIlDb7L7MMkzCEA5a8zLUu6A8Iv4hhduEeX0u9pjHzgzwSFim
      absJh/G75ziomJezkhI/LBYoJhM8M6ohk77A61kewg5BKIWirtt6R50YVBSF3tr0sfYSoDRD
      wsXFhdWRZs66QghUUsJBu2o6HWGOgwBZVWEcx9h2e5xR6DafJLwuv5ccXFxfIMYjAuezPw8z
      B3YLfp3NoI+EWin8uFzq703TAErtJIDs4AS5+RR8MZnsMGEYhhiNRri9vT25qvWx6LPeWE2q
      SiGvayySRMv8gedhFkVQ3Sx/f3+P7Xark2CSJNEbaNCm10mSaJHLlOsJ5EEW4t0+wvzvnBT/
      yEiNmUYppfe+2mvbOc4eG7Z9voIgwLNnz/DmzRs8e/bsg5tX+5xPQLv9VOw4cIXYWy0pv3c6
      neqkG16L9erqCrVSiA2Hms13ALSRvI4Q8IVAVddQaAuiVVJCoLXYnRngEaGUwl2SaF1AKbX3
      kglpVen82Idcx2bS48dNSClxeXmJLMtOsg49BLbYJX4MTYPQ8/b8Ap7naSXaDJOWUkI2DVS3
      uZ/qVpK0KDDrst+WRYGsqhC4LnzXxbYoEPs+AsdBUlXI6xq+4yCva8Seh+fT6ZkBHhtpWe4o
      w77rtuHRlrZZVT2IAR4KUl4/NAP0zc4A8M3//X/hr//Nv4YfRfj7/8P/iItf/ArArj+Ce371
      MSGwSJK2bDxaY8J9kqCo6zZ8XSlsuuT4rMt7BoDcqGJXd2JXWtf4brk86wCPjawrb07wXXev
      3AphUxT6hTwEp9jfqf0hRXi5XGKxWGC1WmGz2Zy0BwIwHDfUVCX+6i//dyT3d1j++AP+n3/1
      f+wU+42iCKWU+pnQ+UlRQDYNAs9D0QXNBZ6Hry4u8NsXL3AxGmF0guGAINU5HPrRodCWXHw+
      nSLulvFZFCEOAny3WOwQfNOJTH0M8iEwn8+xWCxweXm587sQAvf391pHoJn77du3uL6+Psg4
      fQF0fQpqe7C1iuVVhfskafWi7tA0DDEOAkS+j5+WSwghcDkaYcw24qP/gevih8XipOdAcP/J
      P/2n/5v7wG1Az7BDKoVNnqNRqi27CMAVAuMwRC0lIs/TWWe0Q7r3QAvNqXVMhRAYjUZYLBYQ
      QuwUpuUJLGR3n06nePPmjXZ69fVpHjNlf8dx4Ho+4ukMd9/9AaOLS/yn/9V/j9e1xCrPd1ZN
      oPWtbMsSyyyDVApSKWzLEuh0n7KucbvZoJISt9stvG4vNXmigi/+z7/6K+Uf8Dye8XDMwhAv
      ZjOtDK/zHNtOWZNKIeqKcc1ZQa5DsMnYtjifIQghdCgF1R+6uLjYm+mJwW5vb/dWDd5maKym
      TK9kjU1R4s12ezrBGt9910XZWXVmcYxVFyl6LM46wAfGuihws9no7yQW0YsPO7l221U9s+FQ
      6DG1OQVKtQntV1dXcF0X8/lujrMZWjGbzXTBKo5Dqw+PxCTv+KascJMkJxM/0IWdsL+SAv+A
      k4kfOHuCfxYs8xxBN9P7rosv53N8c3eHqmmw6jZ0WBcFfu15B0Uh065umkNPDaVumuaoeCHa
      g4sy3Ag2by+HEEJba1zHwX2SHAyL/jlxXgF+Jtxst9rzCQBfzudwGbHIpsEPqxWKA5tPAPZQ
      38eGaWGiSNbVarXTjq9KttUgKQoopbDKMtx9ZMQPnBnggyE2DAuOoRSGnre3U31R1/hpvd5h
      lGPAxSObafQUJXkIVIHhlE36sqrC2+32oyN8wpkBPhCyqoJAR/ho3e6uYbGJLInypZT4drHA
      zXarHTp9Hl8bhkKO+zDkUTZXgcvLS+R5Ppg/QEFv26LAfRc6/bHizAAfEK7j4BcXF/hPvvgC
      8zhurRWM0MZhaGWCqmmwyDLkbJvUD4khBukThWzBdVwUchwHbzebBym6PyfODPABUTcNvl0s
      kHXhEbGxFZPnOPjV5eWeuEQounBgXt3Ahp+DSczrXVxc7FiF+H0lXZFh07b/MeLMAD8DbrqN
      ufuC2C7jWFeS4yATalIUcF13sPrbqWERHId8B7a+qbQhz+PluPuI5X6OMwP8DKiaBq/Xa/zh
      7g5106Bump3ZcRKGuIxja+ToXZrix9WqrTl6YKZ/CBMc6zgzmWyo7lDgeScr8n8snBngZ0Ra
      Vfj93R3+480N1mxDZwAYBQGuezbCqJsGPywWeLvZ7Nn7TZyyGjxEdOIMMJ1OsWFOPoIjRO++
      yB8bzgzwM4OC4W6TBPdMho59H1ejkVUpBtrI0UWWtUkeRzjLHmr5OdQv/08JK4vFQm9BSiJR
      cGaAMw7hNknwu7u7HXGoN4USbUBd1CWMHCu2DB0bjNQ80C/9XV5e4uLiAj/++CNub2+R5zmk
      lHg+m+1sO/ux4tNg0yeMumnw03qNX3WBZkPEGAeBnlm5KNKHoeoM/Dj/I/TFHZkFtCgFk3Zs
      kVIiSRLc3d0hGo+x3evh48J5BfgIUNQ1yi4EIvb9nRAJjqQocLfdouo2lh6yDL0Pjkm3NI/R
      7xRY95vf/AbNJ7ACnBngIwHtTuk5Dr7qCmaZUGjFpj/c3WHTKdHv6wPgohCPOu1bAfqUbH5O
      UVV4u14j7VIUP2acRaCPAALYURpD10XsecgsgXGNardy/X65ROz7bVBdz1aswGExiNqckouw
      M3ZL32/Xa6yL4qj+/tg4rwAfAWwhxHybpT5kVYWfVistDtlgxug8htfY1AHoj67RHMlMHwPO
      DPARQCqF7xeLHcJxjrT0ZFWFvAuZOLRP2JBsfyzofC7ymP8/9vgfjjMDfCQopMQf7u91PoDr
      ODqadAgKwO/v7nCXJAdDJehzX/jCQ7GT8SWlVug/BZwZ4COBQhsy8YfO4+sIgS/nc7ycTjE5
      sMewAnC73eJmuwVOTJB/CCOYpU/MjLRPxQkGnJXgjxLLrqLEq66q8yQM8f1yiZSlIppQAO6S
      BK4QmPXUyHmsRBm+mvA9jnXy+4N6/ePgvAJ8pFgXBb5fLrWXeN4TMWrijhWd5SAxyJY5tuli
      jKjuv5lzbCbL2xxmppj1qeDMAB8xkrLET+t1W5UhinrjhDikUvhuuTxqFiai/e6777DdbvHN
      N99gvV7j9evXKIoCq9UKRVGgrmu8fv0aaZri+++/R8EqWHyqhE84M8BHjrzbUMMMoR5CrRRu
      tluIA1Yhwmw2w/39PSaTCd6+faurMf/N3/wNHMfB7e0tZrMZNpsNvv76a9yy7U/7Qik+FZx1
      gE8AP67XqFnNzGOwLgqo9RqvZrM9J5npHLu+vkZd13oP3tvbW0gp8ed//ueoqgovX77Ezc0N
      5vM5vvnmG7x8+VKfayrRn5of4FwZ7onjcjTCi67ePoc5Y/Pvx3iGqY3jODtOuKKu8Tu2Qnzs
      OItATxyrLEPDrDUEk8C5ggwc3oSag3uBvc5/8angzABPHI1SSMrS6iTr3eWd2fRNi9Ch0oye
      6yL8hPwAZwb4DMBnaBvM5JghpdY0i9I5nMHMgl8fMz4dVj3jwXi73cIRAiNL+RVT5LGZNHnl
      afM87l+gtuMwRFIU1mjWnwNUij5wXaRliaKq0KDbsdNg3jMDfAaQTYNFmmI0n/e24QTOVwSz
      /Dod5+eZTBT7PsZh+LMxgCtEu89wlzI6jSK4rLJ1VdfaU/2HxWInWO/MAJ8Jxt1GGH2wVZW2
      hWmbjGI75+dKivcdB88nE0TdBiN6HF1qph4ToMtS+p4HyUJKzgzwGSB0XUyNjfEOOa76jttS
      IW05wrM4xtvN5r32QDuE6/G4rapn6CV8ReJjy7vQcY6zEvwZwBFiL0R5aKbnx22OLprlyQfA
      N9Lgs/CL6fSDmkT5fmG2VE3+uahrvNls9gj+vAJ8BuirN6S69MplmqKSEqMw3NmqSTFRYmg1
      sCnIQghMowjXdY3bD1QhWjZNb7gHh1IKrzcbKADmenRmgM8A92mKX15e7lhqtCdXtLsvUgQp
      tTHNon25xbQamFYh+n49HrdK+AO2LzqEummO2lxQKrVn/SGcRaDPAFldY2kQoCnju44DtyNk
      m5XHzP2l3w8FwimlcD0e95Z6eSgujoyObZTau3eOMwN8JnjbbbhhWnCGiLfP2tPnIebMwB1j
      ruP0loB/KCZRdFT0qdvpKn04M8BnhNebDZZZtqMQn+IFJnCLC0+IoT64UkxtvziiysWxGPk+
      wiOLbgkhBitVnxngM4JUCjdJgu+WSyRVBfRUnmgsFpWd48aeZATzM2eGyPfxfDp9r/ELAFdx
      jC/ncwjjen1QSqEeyKM4M8BniAbAT+s1vr2/35kduby/yrK9BBxbKAT/zBVgm1lyHsf45eUl
      LuIY4wOJ/kDr6JpHkRafBIBR5/E9BM/3cZskqJtG77VmbXewpzOeLAopcZ+meDaZ7PzuOg68
      TikmcDnaJHgePUqgz03TICkKjKMIAm2gHHml86rC98ulDk3wXbetfg0g1LrYbwAABLtJREFU
      cF1cj8c6wYZKQU7CcLAgMF3z7u4OSV3DFWLP9MlxZoDPHKuiQF7XmAQBJlGEoJOtx0ZE51DY
      tM3zyn/Lu3Bs3qcQAnEQ4MV0iryuMQ1DxGx234lHEgJzlrTFTbPmeHzfx+3tLb64vobabPBm
      sYA7sNqcGeAMFFKiyDLcZRn8Lo7Hcxx8MR5rT+4xcUQEUzy6GI3a3OZul0zefhbHmFE/2Lco
      2a692Wwgpdz7PcsyeJ6Hq6sr1HWNrKoGiR84M8AZBqqmQdVVda6lxPPptNeGbwul7rMeRZ43
      GH7RF5Zt67csS8wtka1N0+Dy8lIz0THVqc8McEYvkk5GfzaZDEaT2kSRvnaUR2yea2MeU7Rq
      mgZVt0WUuVEHbwfg6MT8MwOcMYiqafDjeo3Y9zHtFFiXKb0mEfYxgy1i1Naen0PHqY2UEsvl
      Eq9evdJ92EKy9XlH3N+ZAc44CllVtZ5kANMwxPPp1KqMmqbPIVnexJAIBbS7z7x48QKLxQKT
      yQQeC4UQBlMeW5jlzABnnASFtubQtqsONw1DjMIQsyja8SMcBSF0GXhT8e0Dyfk//fQTXr16
      tcNUFLqtlML2yA06zo6wMx6EBq1neZnn+HG1wo+rVUt0PXFC5uxfNw2+vb/HMssgWG0harfJ
      MtRMVOIhGlJK/OpXv8LNzc1On9Q2r+ujo0/PK8AZj4J1nmOd5xgHAS67nILQ8/Y2+miUQl7X
      uNluUTUN3m63uEsSzOIY16ORNoXGQdDmMXf+idvb290AO9fFRbeXGtcRkjzH680GxxSRjDzv
      XBnujA8H33Ewj+OW0NAyyaYoej2zrhB4NZsh9v0dC1CapvA8D/4REaVFUSBrGozDEG+XSzy/
      uEAtJUopUUmJpmkQ+D7GQYDAdc8rwBkfDlXTnJQNJpXC96sVvprPMQlD7TjL8xyX3T7KQ7jd
      bhEHAcaeh2y7xa+ePYNSCoHrYgS7r+GsA5zx0YH0Cdd1UVXVUTO/EALXkwlknqOua8znc2ui
      PH3W0aof5A7OOOM9oNAxQVkiCAKrVcmWu5AmCS4uLjAej60xSTacRaAzPkooAD8ul3g+HiPo
      iecxo0/ruobjODqRv8/vwJnmvAKc8dFCAfhptULFyq/YZnLXdXF7e4uyLHd2rzkGZwY446OG
      43l4s9ngx9VKl3nnjCCEwHK5xHg8xldffYWiKJAkCTzPQ1mW1g3ESbF2z1agMz4VbIoCSVli
      5Ps6UWcWxyiTBPP5XDvIptMppJS4u7vTuQHX19daHMo7JVkp1TLKH/OmzjjjFDRKYctCnNd5
      3oZZZxlGnV2f8pCvrq4AvNvKlaw+RVFgNptpp9qZAc74ZKHQ1jzKtlsArSPtqqsXGrguPNeF
      H4ZYpCku4hh1XcN1Xbiuq1eEMwOc8WQgVbs7JoB3mWwAPCFQ5zkgJV6+fInqXB36jKcObgAN
      fR8Xsxk8x0Fd1zsh3Gcr0BlPHklZ4vVqBdnVMirqGlUXZnFmgDM+CyRVhT/c3yOrKizSFG82
      GwBnEeiMzwhV0+DtZoNfdxai7xeL8wpwxueFQkq82Wy0ufS8Apzx2WGV56ibBpej0ZkBzvg8
      kZQllFLw5JHJw2ec8dSwyXP8/73vWD2N9L+cAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      Gv8X/J8NFmNyGmoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      jAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
